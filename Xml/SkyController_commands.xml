<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (C) 2014 Parrot SA

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the 
      distribution.
    * Neither the name of Parrot nor the names
      of its contributors may be used to endorse or promote products
      derived from this software without specific prior written
      permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
    OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
    AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
    OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
    OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.
-->

<!--
 Important notes :
 ALWAYS ADD NEW THINGS AT THE END OF THE PARENT TAG !
 NEVER MODIFY EXISTING class/command/arg !
 
 Comments are mandatory for all classes/commands/args
 For each comment : 1st line will be used as brief (if applicable)
 Other lines will be used as complete desc
 
 How to add a new class :
 <class name="MyNewClassName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the class                | Inlcuded in Doxygen doc
 <cmd> ... </cmd>                       | List of commands
 <cmd> ... </cmd>
 </class>
 
 How to add a new command (without args) to a class :
 <cmd name="MyNewCommandName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 </cmd>
 
 How to add a new command (with args) to a class :
 <cmd name="MyNewCommandWithArgs" >       | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 <arg name="argName" type="argType" >   | Repeat for each arg
 Comment about the arg                | argName must be a valid C variable name
 </arg>                                 | argType must be a valid type (see below)
 ...                                    | Comment included in Doxygen doc
 </cmd>
 
 List of valid types (associated C type) :
 -  i8 /  u8 : signed/unsigned  8 bit integer ([u]int8_t)
 - i16 / u16 : signed/unsigned 16 bit integer ([u]int16_t)
 - i32 / u32 : signed/unsigned 32 bit integer ([u]int32_t)
 - i64 / u64 : signed/unsigned 64 bit integer ([u]int64_t)
 -     float : IEEE-754 single precision floating point number (float)
 -    double : IEEE-754 double precision floating point number (double)
 -    string : NULL-terminated UTF-8 String. (char *)
 -->


<project id="4">
    All SkyController-only commands
    
    <class name="WifiState" id="0">
        Wifi state
        <cmd name="WifiList">
            Return the available wifi list
            <arg name="bssid" type="string">
                Wifi bssid
            </arg>
            <arg name="ssid" type="string">
                Wifi ssid
            </arg>
            <arg name="secured" type="u8">
                Is wifi secured by passphrase
            </arg>
            <arg name="saved" type="u8">
                Is wifi saved in terminal
            </arg>
            <arg name="rssi" type="i32">
                Wifi rssi
            </arg>
            <arg name="frequency" type="i32">
                Wifi frequency
            </arg>
        </cmd>
        
        <cmd name="ConnexionChanged">
            Return connexion status
            <arg name="ssid" type="string">
                Wifi ssid
            </arg>
            <arg name="status" type="enum">
                Wifi status
                <enum name="connected">
                    Connected
                </enum>
                <enum name="error">
                    Error
                </enum>
                <enum name="disconnected">
                    Disconnected
                </enum>
            </arg>
        </cmd>
    </class>

    <class name="Wifi" id="1">
        Wifi
        <cmd name="RequestWifiList">
            Request wifi list
        </cmd>

        <cmd name="RequestCurrentWifi">
            Request current connected wifi
        </cmd>
        
        <cmd name="ConnectToWifi">
            Connect to wifi
            <arg name="bssid" type="string">
                Wifi bssid
            </arg>
            <arg name="ssid" type="string">
                Wifi ssid
            </arg>
            <arg name="passphrase" type="string">
                Wifi passphrase
            </arg>
        </cmd>

        <cmd name="ForgetWifi">
            Forget wifi
            <arg name="ssid" type="string">
                Wifi ssid
            </arg>
        </cmd>
    </class>
    
    <class name="Device" id="2">
        Device Connection commands
        
         <cmd name="RequestDeviceList">
            Request Device list
        </cmd>

        <cmd name="RequestCurrentDevice">
            Request current connected Device
        </cmd>
        
        <cmd name="ConnectToDevice">
            ask to connect to a device
            <arg name="deviceName" type="string">
                Device name
            </arg>
        </cmd>
    </class>
    
    <class name="DeviceState" id="3">
        Device state
        
        <cmd name="DeviceList">
            Return the available Device list
            <arg name="name" type="string">
                Device name
            </arg>
        </cmd>
        
        <cmd name="ConnexionChanged">
            Return device connexion status
            <arg name="status" type="enum">
                Wifi status to Device
                <enum name="notConnected">
                    Not Connected
                </enum>
                <enum name="connecting">
                    Connecting to Device
                </enum>
                
                <enum name="connected">
                    Connected to Device
                </enum>
                
                <enum name="disconnecting">
                    Disconnecting from Device
                </enum>
            </arg>
            <arg name="deviceName" type="string">
                Device name
            </arg>
            <arg name="deviceProductID" type="u16">
                Device name
            </arg>
        </cmd>        
    </class>
    
    <class name="Settings" id="4">
        Settings commands
        <cmd name="AllSettings">
            Get all product settings, the product must send all settings
        </cmd>
        <cmd name="Reset">
            Reset all settings
        </cmd>
        
    </class>
    
    <class name="SettingsState" id="5">
        Settings state from product
        <cmd name="AllSettingsChanged">
            State sent when all settings has been sent.
        </cmd>
        
        <cmd name="ResetChanged">
            State sent when all settings has been resetting.
        </cmd>
        
        <cmd name="ProductSerialChanged">
            Product serial number
            <arg name="serialNumber" type="string">
                Serial number (hexadecimal value)
            </arg>
        </cmd>
    </class>
    
    <class name="Common" id="6">
        Common commands
        <cmd name="AllStates">
            Get all product states.
        </cmd>
    </class>
    
    <class name="CommonState" id="7">
        Common state from product
        <cmd name="AllStatesChanged">
            State sent when all product states has been sent.
        </cmd>
    </class>

    <class name="SkyControllerState" id="8">
        Sky Controller states
        <cmd name="BatteryChanged">
            State sent when SkyController battery has changed
            <arg name="percent" type="u8">
                SkyController battery
            </arg>
        </cmd>

        <cmd name="GpsFixChanged">
            State sent when SkyController gps fix has changed
            <arg name="fixed" type="u8">
                SkyController fixed
            </arg>
        </cmd>
    </class>

    <class name="AccessPointSettings" id="9">
        AccessPoint settings commands
        <cmd name="AccessPointSSID">
            Set AccessPoint SSID
            <arg name="ssid" type="string">
                AccessPoint SSID
            </arg>
        </cmd>
        <cmd name="AccessPointChannel">
            Set AccessPoint Channel
            <arg name="channel" type="u8">
                AccessPoint Channel
            </arg>
        </cmd>
    </class>
    
    <class name="AccessPointSettingsState" id="10">
        AccessPoint settings state from product
        <cmd name="AccessPointSSIDChanged">
            State sent when AccessPoint ssid has been sent
            <arg name="ssid" type="string">
                AccessPoint SSID
            </arg>
        </cmd>
        <cmd name="AccessPointChannelChanged">
            State sent when AccessPoint channel has been sent
            <arg name="channel" type="u8">
                AccessPoint Channel
            </arg>
        </cmd>
    </class>

    <class name="Camera" id="11">
        Ask the drone to move camera
        <cmd name="ResetOrientation">
            Reset pan and tilt to center
        </cmd>
    </class>
    
</project>
