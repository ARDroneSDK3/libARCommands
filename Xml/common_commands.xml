<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (C) 2014 Parrot SA

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the 
      distribution.
    * Neither the name of Parrot nor the names
      of its contributors may be used to endorse or promote products
      derived from this software without specific prior written
      permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
    OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
    AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
    OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
    OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.
-->

<!--
 Important notes :
 ALWAYS ADD NEW THINGS AT THE END OF THE PARENT TAG !
 NEVER MODIFY EXISTING class/command/arg !
 
 Comments are mandatory for all classes/commands/args
 For each comment : 1st line will be used as brief (if applicable)
 Other lines will be used as complete desc
 
 How to add a new class :
 <class name="MyNewClassName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the class                | Inlcuded in Doxygen doc
 <cmd> ... </cmd>                       | List of commands
 <cmd> ... </cmd>
 </class>
 
 How to add a new command (without args) to a class :
 <cmd name="MyNewCommandName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 </cmd>
 
 How to add a new command (with args) to a class :
 <cmd name="MyNewCommandWithArgs" >       | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 <arg name="argName" type="argType" >   | Repeat for each arg
 Comment about the arg                | argName must be a valid C variable name
 </arg>                                 | argType must be a valid type (see below)
 ...                                    | Comment included in Doxygen doc
 </cmd>
 
 List of valid types (associated C type) :
 -  i8 /  u8 : signed/unsigned  8 bit integer ([u]int8_t)
 - i16 / u16 : signed/unsigned 16 bit integer ([u]int16_t)
 - i32 / u32 : signed/unsigned 32 bit integer ([u]int32_t)
 - i64 / u64 : signed/unsigned 64 bit integer ([u]int64_t)
 -     float : IEEE-754 single precision floating point number (float)
 -    double : IEEE-754 double precision floating point number (double)
 -    string : NULL-terminated UTF-8 String. (char *)
 -->


<project id="0">
    All common commands shared between all projects

    <class name="Network" id="0">
        Network related commands
        
        <cmd name="Disconnect">
            Signals the remote that the host will disconnect and close its
            libARNetwork instance (and all threads that use libARNetwork)
        </cmd>
    </class>
    
    <class name="Event" id="1">
        Event from product

    </class>
    
    <class name="Settings" id="2">
        Settings commands
        <cmd name="AllSettings">
            Get all product settings, the product must send all settings
        </cmd>
        <cmd name="Reset">
            Reset all settings
        </cmd>
        <cmd name="ProductName">
            Set Product name
            <arg name="name" type="string">
                Product name
            </arg>
        </cmd>

        <cmd name="Country">
            Set current Country of controller
            <arg name="code" type="string">
                Country code with ISO 3166 format
            </arg>
        </cmd>
        
        <cmd name="AutoCountry">
            Set Auto Country Settings
            <arg name="automatic" type="u8">
                Boolean : 0 : Manual / 1 : Auto
            </arg>
        </cmd>
    </class>
    
    <class name="SettingsState" id="3">
        Settings state from product
        <cmd name="AllSettingsChanged">
            State sent when all settings has been sent.
        </cmd>
        
        <cmd name="ResetChanged">
            State sent when all settings has been resetting.
        </cmd>

        <cmd name="ProductNameChanged">
            Product name 
            <arg name="name" type="string">
                Product name
            </arg>
        </cmd>
        
        <cmd name="ProductVersionChanged">
            Product versions
            <arg name="software" type="string">
                Product software version
            </arg>
            <arg name="hardware" type="string">
                Product hardware version
            </arg>
        </cmd>
        
        <cmd name="ProductSerialHighChanged">
            Product serial number
            <arg name="high" type="string">
                Serial high number (hexadecimal value)
            </arg>
        </cmd>
        
        <cmd name="ProductSerialLowChanged">
            Product serial number
            <arg name="low" type="string">
                Serial low number (hexadecimal value)
            </arg>
        </cmd>

        <cmd name="CountryChanged">
            Inform current Country set in product. (Answer to 'Country' command)
            <arg name="code" type="string">
                Country code with ISO 3166 format, empty string means unknown country.
            </arg>
        </cmd>
        
        <cmd name="AutoCountryChanged">
            Inform Auto Country Settings
            <arg name="automatic" type="u8">
                Boolean : 0 : Manual / 1 : Auto
            </arg>
        </cmd>
    </class>
    
    <class name="Common" id="4">
        Common commands
        <cmd name="AllStates">
            Get all product states.
        </cmd>
        
        <cmd name="CurrentDate">
            Set current date of controller
            <arg name="date" type="string">
                Date with ISO-8601 format
            </arg>
        </cmd>
        
        <cmd name="CurrentTime">
            Set current time of controller
            <arg name="time" type="string">
                Time with ISO-8601 format
            </arg>
        </cmd>
        
        <cmd name="Reboot">
            Command to ask reboot to product
        </cmd>
    </class>

    <class name="CommonState" id="5">
        Common state from product
        <cmd name="AllStatesChanged">
            State sent when all product states has been sent.
        </cmd>
        
        <cmd name="BatteryStateChanged">
            Battery state
            <arg name="percent" type="u8">
                Battery percentage
            </arg>
        </cmd>
        
        <cmd name="MassStorageStateListChanged">
            Mass storage state list
            <arg name="mass_storage_id" type="u8">
                Mass storage id (unique)
            </arg>
            <arg name="name" type="string">
                Mass storage name
            </arg>
        </cmd>
        
        <cmd name="MassStorageInfoStateListChanged">
            Mass storage info state list
            <arg name="mass_storage_id" type="u8">
                Mass storage state id (unique)
            </arg>
            <arg name="size" type="u32">
                Mass storage size in MBytes
            </arg>
            <arg name="used_size" type="u32">
                Mass storage used size in MBytes
            </arg>
            <arg name="plugged" type="u8">
                Mass storage plugged (1 if mass storage is plugged, otherwise 0)
            </arg>
            <arg name="full" type="u8">
                Mass storage full information state (1 if mass storage full, 0 otherwise).
            </arg>
            <arg name="internal" type="u8">
                Mass storage internal type state (1 if mass storage is internal, 0 otherwise)
            </arg>
        </cmd>
        
        <cmd name="CurrentDateChanged">
            Current date state
            <arg name="date" type="string">
                Date with ISO-8601 format
            </arg>
        </cmd>
        
        <cmd name="CurrentTimeChanged">
            Current time state
            <arg name="time" type="string">
                Time with ISO-8601 format
            </arg>
        </cmd>
        
        <cmd name="MassStorageInfoRemainingListChanged">
            Mass storage info remaining list
            <arg name="free_space" type="u32">
                Mass storage free space in MBytes
            </arg>
            <arg name="rec_time" type="u16">
                Mass storage record time reamining in minute
            </arg>
            <arg name="photo_remaining" type="u32">
                Mass storage photo remaining
            </arg>
        </cmd>
        
        <cmd name="WifiSignalChanged">
            Wifi Signal between controller and product state
            <arg name="rssi" type="i16">
                RSSI of the signal between controller and the product (in dbm)
            </arg>
        </cmd>
    </class>
    
    <class name="OverHeat" id="6">
        Over heat commands
        
        <cmd name="SwitchOff">
            Switch off the drone when a overheat appeared
        </cmd>
        
        <cmd name="Ventilate">
            Ventilate the drone when a overheat appeared
        </cmd>
    </class>
    
    <class name="OverHeatState" id="7">
        Overheat state from product
        
        <cmd name="OverHeatChanged">
            Overheat temperature reached
        </cmd>
        
        <cmd name="OverHeatRegulationChanged">
            Overheat regulation state changed
            <arg name="regulationType" type="u8">
                Type of overheat regulation : 0 for ventilation, 1 for switch off
            </arg>
        </cmd>
    </class>

    <class name="ControllerState" id="8">
        Notify the device about the state of the controller application.
        <cmd name="isPilotingChanged">
            Tell the device when the controller application enters/leaves the piloting HUD.
            <arg name="piloting" type="u8">
                0 when the application is not in the piloting HUD, 1 when it enters the HUD.
            </arg>
        </cmd>
    </class>

    <class name="WifiSettings" id="9">
        Wifi settings commands
        <cmd name="OutdoorSetting">
            Send to product if it should use its outdoor wifi config, or indoor
            <arg name="outdoor" type="u8">
                1 if it should use outdoor wifi settings, 0 otherwise
            </arg>
        </cmd>
    </class>

    <class name="WifiSettingsState" id="10">
        Wifi settings state from product
        <cmd name="outdoorSettingsChanged" type="u8">
            Status of the wifi config : either indoor or outdoor
            <arg name="outdoor" type="u8">
                1 if it should use outdoor wifi settings, 0 otherwise
            </arg>
        </cmd>
    </class>

    <class name="Mavlink" id="11">
         Mavlink flight plans commands
         <cmd name="Start">
             Start the flight plan
             <arg name="filepath" type="string">
                 flight plan file path from the mavlink ftp root
             </arg>
             <arg name="type" type="enum">
             	type of the played mavlink file
             	<enum name="flightPlan">
                    Mavlink file for FlightPlan
                </enum>
                <enum name="mapMyHouse">
                    Mavlink file for MapMyHouse
                </enum>
             </arg>
         </cmd>
         <cmd name="Pause">
             Pause the flightplan (can be restarted with a start)
         </cmd>
         <cmd name="Stop">
             Stop the flightplan
         </cmd>
     </class>
     <class name="MavlinkState" id="12">
         Mavlink flight plans states commands
         <cmd name="MavlinkFilePlayingStateChanged">
             Playing state of a mavlink flight plan
             <arg name="state" type="enum">
             	State of the mavlink 
             	<enum name="playing">
                    Mavlink file is playing
                </enum>
                <enum name="stopped">
                    Mavlink file is stopped (arg filepath and type are useless in this state)
                </enum>
                <enum name="paused">
                    Mavlink file is paused
                </enum>
             </arg>
             <arg name="filepath" type="string">
                 flight plan file path from the mavlink ftp root
             </arg>
             <arg name="type" type="enum">
                type of the played mavlink file
                <enum name="flightPlan">
                    Mavlink file for FlightPlan
                </enum>
                <enum name="mapMyHouse">
                    Mavlink file for MapMyHouse
                </enum>
             </arg>
         </cmd>
         <cmd name="MavlinkPlayErrorStateChanged">
             FlightPlan play state error
             <arg name="error" type="enum">
                 State of play error
                 <enum name="none">
                     There is no error
                 </enum>
                 <enum name="notInOutDoorMode">
                     The drone is not in outdoor mode
                 </enum>
                 <enum name="gpsNotFixed">
                     The gps is not fixed
                 </enum>
             </arg>
         </cmd>
     </class>
    <class name="Calibration" id="13">
        Calibration commands
        <cmd name="MagnetoCalibration">
            Sent when a calibration of the magnetometer is asked or is aborted
            <arg name="calibrate" type="u8">
                1 if the calibration should be started, 0 if it should be aborted
            </arg>
        </cmd>
    </class>
    <class name="CalibrationState" id="14">
        Status of the calibration
        <cmd name="MagnetoCalibrationStateChanged">
            Sent when the state of the magneto calibration has changed
            <arg name="xAxisCalibration" type="u8">
                State of the x axis (roll) calibration : 1 if calibration is done, 0 otherwise
            </arg>
            <arg name="yAxisCalibration" type="u8">
                State of the y axis (pitch) calibration : 1 if calibration is done, 0 otherwise
            </arg>
            <arg name="zAxisCalibration" type="u8">
                State of the z axis (yaw) calibration : 1 if calibration is done, 0 otherwise
            </arg>
            <arg name="calibrationFailed" type="u8">
                1 if calibration has failed, 0 otherwise. If this arg is 1, consider all previous arg as 0
            </arg>
        </cmd>
        <cmd name="MagnetoCalibrationRequiredState">
            Status of the calibration requirement
            <arg name="required" type="u8">
                1 if calibration is required, 0 if current calibration is still valid
            </arg>
        </cmd>
        <cmd name="MagnetoCalibrationAxisToCalibrateChanged">
            Event sent by a product to inform about the axis to calibrate
            <arg name="axis" type="enum">
                The axis to calibrate
                <enum name="xAxis">
                    If the current calibration axis should be the x axis
                </enum>
                <enum name="yAxis">
                    If the current calibration axis should be the y axis
                </enum>
                <enum name="zAxis">
                    If the current calibration axis should be the z axis
                </enum>
                <enum name="none">
                    If none of the axis should be calibrated
                </enum>
            </arg>
        </cmd>
        <cmd name="MagnetoCalibrationStartedChanged">
            Status of the calibration process
            <arg name="started" type="u8">
                1 if calibration has started, 0 otherwise
            </arg>
        </cmd>
    </class>
    <class name="CameraSettingsState" id="15">
         Status of the camera settings
         <cmd name="CameraSettingsChanged">
             Status of the camera settings
             <arg name="fov" type="float">
                Value of the camera horizontal fov (in degree)
             </arg>
             <arg name="panMax" type="float">
                Value of max pan (right pan) (in degree)
             </arg>
             <arg name="panMin" type="float">
                Value of min pan (left pan) (in degree)
             </arg>
             <arg name="tiltMax" type="float">
                Value of max tilt (top tilt) (in degree)
             </arg>
             <arg name="tiltMin" type="float">
                Value of min tilt (bottom tilt) (in degree)
             </arg>
         </cmd>
     </class>
     <class name="GPS" id="16">
        GPS related commands
        <cmd name="ControllerPositionForRun">
            Set the controller position for a run. This command is used by all non gps products
            <arg name="latitude" type="double">
                Controller latitude in decimal degrees
            </arg>
            <arg name="longitude" type="double">
                Controller longitude in decimal degrees
            </arg>
            <arg name="altitude" type="double">
                Controller altitude in meters
            </arg>
        </cmd>
    </class>
</project>
