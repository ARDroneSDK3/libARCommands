<?xml version="1.0" encoding="UTF-8"?>

<!--
 Important notes :
 ALWAYS ADD NEW THINGS AT THE END OF THE PARENT TAG !
 NEVER MODIFY EXISTING class/command/arg !
 
 Comments are mandatory for all classes/commands/args
 For each comment : 1st line will be used as brief (if applicable)
 Other lines will be used as complete desc
 
 How to add a new class :
 <class name="MyNewClassName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the class                | Inlcuded in Doxygen doc
 <cmd> ... </cmd>                       | List of commands
 <cmd> ... </cmd>
 </class>
 
 How to add a new command (without args) to a class :
 <cmd name="MyNewCommandName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 </cmd>
 
 How to add a new command (with args) to a class :
 <cmd name="MyNewCommandWithArgs" >       | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 <arg name="argName" type="argType" >   | Repeat for each arg
 Comment about the arg                | argName must be a valid C variable name
 </arg>                                 | argType must be a valid type (see below)
 ...                                    | Comment included in Doxygen doc
 </cmd>
 
 List of valid types (associated C type) :
 -  i8 /  u8 : signed/unsigned  8 bit integer ([u]int8_t)
 - i16 / u16 : signed/unsigned 16 bit integer ([u]int16_t)
 - i32 / u32 : signed/unsigned 32 bit integer ([u]int32_t)
 - i64 / u64 : signed/unsigned 64 bit integer ([u]int64_t)
 -     float : IEEE-754 single precision floating point number (float)
 -    double : IEEE-754 double precision floating point number (double)
 -    string : NULL-terminated UTF-8 String. (char *)
 -->


<project id="0">
    All common commands shared between all projects

    <class name="Network" id="0">
        Network related commands
        
        <cmd name="Disconnect">
            Signals the remote that the host will disconnect and close its
            libARNetwork instance (and all threads that use libARNetwork)
        </cmd>
    </class>
    
    <class name="Event" id="1">
        Event from product

    </class>
    
    <class name="Settings" id="2">
        Settings commands
        <cmd name="AllSettings">
            Get all product settings, the product must send all settings
        </cmd>
        
        <cmd name="Reset">
            Reset all settings
        </cmd>

        <cmd name="ProductName">
            Set Product name
            <arg name="name" type="string">
                Product name
            </arg>
        </cmd>
    </class>
    
    <class name="SettingsState" id="3">
        Settings state from product
        <cmd name="AllSettingsChanged">
            State sent when all settings has been sent.
        </cmd>
        
        <cmd name="ResetChanged">
            State sent when all settings has been resetting.
        </cmd>

        <cmd name="ProductNameChanged">
            Product name 
            <arg name="name" type="string">
                Product name
            </arg>
        </cmd>
        
        <cmd name="ProductVersionChanged">
            Product versions
            <arg name="software" type="string">
                Product software version
            </arg>
            <arg name="hardware" type="string">
                Product hardware version
            </arg>
        </cmd>
    </class>
    
    <class name="Common" id="4">
        Common commands
        <cmd name="AllStates">
            Get all product states.
        </cmd>
    </class>

    <class name="CommonState" id="5">
        Common state from product
        <cmd name="AllStatesChanged">
            State sent when all product states has been sent.
        </cmd>
        <cmd name="BatteryStateChanged">
            Battery state
            <arg name="percent" type="u8">
                Battery percentage
            </arg>
        </cmd>
    </class>
</project>
