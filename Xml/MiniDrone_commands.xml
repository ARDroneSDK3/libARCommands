<?xml version="1.0" encoding="UTF-8"?>

<!--
 Important notes :
 ALWAYS ADD NEW THINGS AT THE END OF THE PARENT TAG !
 NEVER MODIFY EXISTING class/command/arg !
 
 Comments are mandatory for all classes/commands/args
 For each comment : 1st line will be used as brief (if applicable)
 Other lines will be used as complete desc
 
 How to add a new class :
 <class name="MyNewClassName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the class                | Inlcuded in Doxygen doc
 <cmd> ... </cmd>                       | List of commands
 <cmd> ... </cmd>
 </class>
 
 How to add a new command (without args) to a class :
 <cmd name="MyNewCommandName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 </cmd>
 
 How to add a new command (with args primitive type) to a class :
 <cmd name="MyNewCommandWithArgs" >       | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 <arg name="argName" type="argType" >   | Repeat for each arg
 Comment about the arg               | argName must be a valid C variable name
 </arg>                                 | argType must be a valid type (see below)
 ...                                    | Comment included in Doxygen doc
 </cmd>
 
 How to add a enum (in args) to a class :
 <cmd name="MyNewCommandWithArgs" >         | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 <arg name="argName" type="argType" >   | Repeat for each arg
 Comment about the arg             | Included in Doxygen doc
 <enum name="argName">             | No spaces ! [A-Za-z0-9_]
 Comment about the enum        | Included in Doxygen doc
 </enum>
 </arg>                                 | argType must be a valid type (see below)
 ...                                    | Comment included in Doxygen doc
 </cmd>
 
 List of valid types (associated C type) :
 -  i8 /  u8 : signed/unsigned  8 bit integer ([u]int8_t)
 - i16 / u16 : signed/unsigned 16 bit integer ([u]int16_t)
 - i32 / u32 : signed/unsigned 32 bit integer ([u]int32_t)
 - i64 / u64 : signed/unsigned 64 bit integer ([u]int64_t)
 -     float : IEEE-754 single precision floating point number (float)
 -    double : IEEE-754 double precision floating point number (double)
 -    string : NULL-terminated UTF-8 String. (char *)
 -    enum:  : enumeration define on arg
 -->

<project id="2">
    All MiniDrone-only commands
    
    <class name="Piloting" id="0">
        All commands related to piloting the MiniDrone
        
        <cmd name="FlatTrim">
            Do a flat trim
        </cmd>
        
        <cmd name="TakeOff">
            Ask the drone to take off
        </cmd>
        
        <cmd name="PCMD">
            Ask the drone to move around.
            
            <arg name="flag" type="u8">
                Boolean flag to activate roll/pitch movement
            </arg>
            
            <arg name="roll" type="i8">
                Roll consign for the MiniDrone [-100;100]
            </arg>
            
            <arg name="pitch" type="i8">
                Pitch consign for the MiniDrone [-100;100]
            </arg>
            
            <arg name="yaw" type="i8">
                Yaw consign for the MiniDrone [-100;100]
            </arg>
            
            <arg name="gaz" type="i8">
                Gaz consign for the MiniDrone [-100;100]
            </arg>
            
            <arg name="psi" type="float">
                Magnetic north heading of the controlling device (deg) [-360;360]
            </arg>
        </cmd>
        
        <cmd name="Landing">
            Ask the MiniDrone to land
        </cmd>
        
        <cmd name="Emergency">
            Put drone in emergency state
        </cmd>
        
        <cmd name="RollingMode">
            Set MiniDrone rolling mode
            <arg name="mode" type="enum">
                Mode for the rolling state
                <enum name="ground">
                    Rolling mode ground by default
                </enum>
                <enum name="ceiling">
                    Rolling mode ceiling
                </enum>
                <enum name="wall">
                    Rolling mode wall
                </enum>
            </arg>
        </cmd>
    </class>
    
    <class name="Animations" id="4">
        Animation commands
        
        <cmd name="Flip">
            Make a flip
            <arg name="direction" type="enum">
                Direction for the flip
                <enum name="front">
                    Flip direction front
                </enum>
                <enum name="back">
                    Flip direction back
                </enum>
                <enum name="right">
                    Flip direction right
                </enum>
                <enum name="left">
                    Flip direction left
                </enum>
            </arg>
        </cmd>
        <cmd name="Cap">
            Change the product cap
            <arg name="offset" type="i16">
                Change the cap with offset angle [-180;180]
            </arg>
        </cmd>
    </class>
    
    <class name="MediaRecord" id="6">
        Media recording management
        
        <cmd name="Picture">
            Take picture
        </cmd>
    </class>
    
    <class name="MediaRecordState" id="7">
        State of media recording
        
        <cmd name="PictureStateChanged">
            State of picture recording
            <arg name="state" type="u8">
                1 if picture has been taken, 0 otherwise
            </arg>
        </cmd>
    </class>

    <class name="Event" id="2">
        Event from drone
    </class>
    
    <class name="PilotingState" id="3">
        Occasional information
        
        <cmd name="FlatTrimChanged">
            MiniDrone send flat trim was correctly processed
        </cmd>
        
        <cmd name="FlyingStateChanged">
            Drone flying state changed
            <arg name="state" type="enum">
                Drone flying state
                <enum name="landed">
                    Landed state
                </enum>
                <enum name="takingoff">
                    Taking off state
                </enum>
                <enum name="hovering">
                    Hovering state
                </enum>
                <enum name="flying">
                    Flying state
                </enum>
                <enum name="landing">
                    Landing state
                </enum>
                <enum name="emergency">
                    Emergency state
                </enum>
            </arg>
        </cmd>
        
        <cmd name="AlertStateChanged">
            Drone alert state changed
            <arg name="state" type="enum">
                Drone alert state
                <enum name="none">
                    No alert
                </enum>
                <enum name="user">
                    User emergency alert
                </enum>
                <enum name="cut_out">
                    Cut out alert
                </enum>
                <enum name="critical_battery">
                    Critical battery alert
                </enum>
                <enum name="low_battery">
                    Low battery alert
                </enum>
            </arg>
        </cmd>
    </class>
    
    <class name="PilotingSettings" id="8">
        Piloting Settings commands
        <cmd name="MaxAltitude">
            Set Max Altitude
            <arg name="current" type="float">
                Current altitude max in m
            </arg>
        </cmd>
        <cmd name="MaxTilt">
            Set Max Tilt
            <arg name="current" type="float">
                Current tilt max in degree
            </arg>
        </cmd>
    </class>
    
    <class name="PilotingSettingsState" id="9">
        Piloting Settings state from product
        <cmd name="MaxAltitudeChanged">
            Max Altitude sent by product
            <arg name="current" type="float">
                Current altitude max
            </arg>
            <arg name="min" type="float">
                Range min of altitude
            </arg>
            <arg name="max" type="float">
                Range max of altitude
            </arg>
        </cmd>
        <cmd name="MaxTiltChanged">
            Max tilt sent by product
            <arg name="current" type="float">
                Current max tilt
            </arg>
            <arg name="min" type="float">
                Range min of tilt
            </arg>
            <arg name="max" type="float">
                Range max of tilt
            </arg>
        </cmd>
    </class>
    
    <class name="SpeedSettings" id="1">
        Speed Settings commands
        <cmd name="MaxVerticalSpeed">
            Set Max Vertical speed
            <arg name="current" type="float">
                Current max vertical speed in m/s
            </arg>
        </cmd>
        <cmd name="MaxRotationSpeed">
            Set Max Rotation speed
            <arg name="current" type="float">
                Current max rotation speed in degree/s
            </arg>
        </cmd>
        <cmd name="Wheels">
            Presence of wheels
            <arg name="present" type="u8">
                1 if present, 0 if not present
            </arg>
        </cmd>
    </class>
    
    <class name="SpeedSettingsState" id="5">
        Speed Settings state from product
        <cmd name="MaxVerticalSpeedChanged">
            Max vertical speed sent by product
            <arg name="current" type="float">
                Current max vertical speed in m/s
            </arg>
            <arg name="min" type="float">
                Range min of vertical speed
            </arg>
            <arg name="max" type="float">
                Range max of vertical speed
            </arg>
        </cmd>
        <cmd name="MaxRotationSpeedChanged">
            Max rotation speed sent by product
            <arg name="current" type="float">
                Current max rotation speed in degree/s
            </arg>
            <arg name="min" type="float">
                Range min of rotation speed
            </arg>
            <arg name="max" type="float">
                Range max of rotation speed
            </arg>
        </cmd>
        <cmd name="WheelsChanged">
            Presence of wheels sent by product
            <arg name="present" type="u8">
                1 if present, 0 if not present
            </arg>
        </cmd>
    </class>
</project>
