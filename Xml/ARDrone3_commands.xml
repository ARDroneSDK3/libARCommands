<?xml version="1.0" encoding="UTF-8"?>

<!--
 Important notes :
 ALWAYS ADD NEW THINGS AT THE END OF THE PARENT TAG !
 NEVER MODIFY EXISTING class/command/arg !
 
 Comments are mandatory for all classes/commands/args
 For each comment : 1st line will be used as brief (if applicable)
 Other lines will be used as complete desc
 
 How to add a new class :
 <class name="MyNewClassName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the class                | Inlcuded in Doxygen doc
 <cmd> ... </cmd>                       | List of commands
 <cmd> ... </cmd>
 </class>
 
 How to add a new command (without args) to a class :
 <cmd name="MyNewCommandName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 </cmd>
 
 How to add a new command (with args) to a class :
 <cmd name="MyNewCommandWithArgs" >       | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 <arg name="argName" type="argType" >   | Repeat for each arg
 Comment about the arg                | argName must be a valid C variable name
 </arg>                                 | argType must be a valid type (see below)
 ...                                    | Comment included in Doxygen doc
 </cmd>
 
 List of valid types (associated C type) :
 -  i8 /  u8 : signed/unsigned  8 bit integer ([u]int8_t)
 - i16 / u16 : signed/unsigned 16 bit integer ([u]int16_t)
 - i32 / u32 : signed/unsigned 32 bit integer ([u]int32_t)
 - i64 / u64 : signed/unsigned 64 bit integer ([u]int64_t)
 -     float : IEEE-754 single precision floating point number (float)
 -    double : IEEE-754 double precision floating point number (double)
 -    string : NULL-terminated UTF-8 String. (char *)
 -->


<project id="1">
    All ARDrone3-only commands
    
    <class name="Piloting" id="0">
        All commands related to piloting the totoDrone
        
        <cmd name="FlatTrim">
            Do a flat trim
        </cmd>
        
        <cmd name="TakeOff">
            Ask the drone to take off
        </cmd>
        
        <cmd name="PCMD">
            Ask the drone to move around.
            
            <arg name="flag" type="u8">
                Boolean flag to activate roll/pitch movement
            </arg>
            
            <arg name="roll" type="i8">
                Roll consign for the drone [-100;100]
            </arg>
            
            <arg name="pitch" type="i8">
                Pitch consign for the drone [-100;100]
            </arg>
            
            <arg name="yaw" type="i8">
                Yaw consign for the drone [-100;100]
            </arg>
            
            <arg name="gaz" type="i8">
                Gaz consign for the drone [-100;100]
            </arg>
            
            <arg name="psi" type="float">
                Magnetic north heading of the controlling device (deg) [-180;180]
            </arg>
        </cmd>
        
        <cmd name="Landing">
            Ask the drone to land
        </cmd>
        
        <cmd name="Emergency">
            Put drone in emergency user state
        </cmd>
        
        <cmd name="NavigateHome">
            Ask the drone to fly to home
            <arg name="start" type="u8">
                1 to start the navigate home, 0 to stop it
            </arg>
        </cmd>
        <cmd name="AutoTakeOffMode">
            Set Drone3 in automatic take off mode
            <arg name="state" type="u8">
                State of automatic take off mode (1 for autotake off enabled)
            </arg>
        </cmd>
    </class>
    
    <class name="Animations" id="5">
        Animation commands
        
        <cmd name="Flip">
            Make a flip
            <arg name="direction" type="enum">
                Direction for the flip
                <enum name="front">
                    Flip direction front
                </enum>
                <enum name="back">
                    Flip direction back
                </enum>
                <enum name="right">
                    Flip direction right
                </enum>
                <enum name="left">
                    Flip direction left
                </enum>
            </arg>
        </cmd>
    </class>
    
    <class name="Camera" id="1">
        Ask the drone to move camera
        
        <cmd name="Orientation">
            Ask the drone to move camera.
            
            <arg name="tilt" type="i8">
                Tilt camera consign for the drone [-1;1]
            </arg>
            
            <arg name="pan" type="i8">
                Pan camera consign for the drone [-1;1]
            </arg>
        </cmd>
    </class>
    
    <class name="MediaRecord" id="7">
        Media recording management
        
        <cmd name="Picture">
            Take picture
            <arg name="mass_storage_id" type="u8">
                Mass storage id to take picture
            </arg>
        </cmd>
        
        <cmd name="Video">
            Video record
            <arg name="record" type="enum">
                Command to record video
                <enum name="stop">
                    Stop the video recording
                </enum>
                <enum name="start">
                    Start the video recording
                </enum>
            </arg>
            <arg name="mass_storage_id" type="u8">
                Mass storage id to record
            </arg>
        </cmd>
    </class>
    
    <class name="MediaRecordState" id="8">
        State of media recording
        
        <cmd name="PictureStateChanged">
            State of picture recording
            <arg name="state" type="u8">
                1 if picture has been taken, 0 otherwise
            </arg>
            <arg name="mass_storage_id" type="u8">
                Mass storage id where the picture was recorded
            </arg>
        </cmd>
        <cmd name="VideoStateChanged">
            State of video recording
            <arg name="state" type="enum">
                State of video
                <enum name="stopped">
                    Video was stopped
                </enum>
                <enum name="started">
                    Video was started
                </enum>
                <enum name="failed">
                    Video was failed
                </enum>
            </arg>
            <arg name="mass_storage_id" type="u8">
                Mass storage id where the video was recorded
            </arg>
        </cmd>
    </class>

    <class name="Event" id="3">
        Events from drone
        
    </class>
    
    <class name="PilotingState" id="4">
        State from drone
        
        <cmd name="FlatTrimChanged">
            Drone acknowledges that flat trim was correctly processed
        </cmd>
        
        <cmd name="FlyingStateChanged">
            Drone flying state changed
            <arg name="state" type="enum">
                Drone flying state
                <enum name="landed">
                    Landed state
                </enum>
                <enum name="takingoff">
                    Taking off state
                </enum>
                <enum name="hovering">
                    Hovering state
                </enum>
                <enum name="flying">
                    Flying state
                </enum>
                <enum name="landing">
                    Landing state
                </enum>
                <enum name="emergency">
                    Emergency state
                </enum>
            </arg>
        </cmd>
        
        <cmd name="AlertStateChanged">
            Drone alert state changed
            <arg name="state" type="enum">
                Drone alert state
                <enum name="none">
                    No alert
                </enum>
                <enum name="user">
                    User emergency alert
                </enum>
                <enum name="cut_out">
                    Cut out alert
                </enum>
                <enum name="critical_battery">
                    Critical battery alert
                </enum>
                <enum name="low_battery">
                    Low battery alert
                </enum>
            </arg>
        </cmd>
        
        <cmd name="NavigateHomeStateChanged">
            Navigating home state
            <arg name="state" type="enum">
                State of navigate home
                <enum name="available">
                    Navigate home is available
                </enum>
                <enum name="inProgress">
                    Navigate home is in progress
                </enum>
                <enum name="unavailable">
                    Navigate home is not available
                </enum>
            </arg>
            <arg name="reason" type="enum">
                Reason of the state 
                <enum name="userRequest">
                    User requested a navigate home (available->inProgress)
                </enum>
                <enum name="connectionLost">
                    Connection between controller and product lost (available->inProgress)
                </enum>
                <enum name="lowBattery">
                    Low battery occurred (available->inProgress)
                </enum>
                <enum name="finished">
                    Navigate home is finished (inProgress->available)
                </enum>
                <enum name="stopped">
                    Navigate home has been stopped (inProgress->available)
                </enum>
                <enum name="disabled">
                    Navigate home disabled by product (inProgress->unavailable or available->unavailable)
                </enum>
                <enum name="enabled">
                    Navigate home enabled by product (unavailable->available)
                </enum>
            </arg>
        </cmd>
        
        <cmd name="PositionChanged">
            Drone position changed
            <arg name="latitude" type="double">
                Latitude position in decimal degrees (500.0 if not available)
            </arg>
            <arg name="longitude" type="double">
                Longitude position in decimal degrees (500.0 if not available)
            </arg>
            <arg name="altitude" type="double">
                Altitude in meters
            </arg>
        </cmd>
        <cmd name="SpeedChanged">
            Drone speed changed
            <arg name="speedX" type="float">
                Speed on the x axis (when drone moves forward, speed is > 0) (in m/s)
            </arg>
            <arg name="speedY" type="float">
                Speed on the y axis (when drone moves to right, speed is > 0) (in m/s)
            </arg>
            <arg name="speedZ" type="float">
                Speed on the z axis (when drone moves down, speed is > 0) (in m/s)
            </arg>
        </cmd>
        <cmd name="AttitudeChanged">
            Drone attitude changed
            <arg name="roll" type="float">
                roll value (in radian)
            </arg>
            <arg name="pitch" type="float">
                Pitch value (in radian)
            </arg>
            <arg name="yaw" type="float">
                Yaw value (in radian)
            </arg>
        </cmd>
        <cmd name="AutoTakeOffModeChanged">
            Status of the drone3 automatic take off mode
            <arg name="state" type="u8">
                State of automatic take off mode (1 if enabled)
            </arg>
        </cmd>
    </class>
    
    <class name="Network" id="13">
        Network related commands
        
        <cmd name="WifiScan">
            Launches wifi network scan
            <arg name="band" type="enum">
                The band(s) : 2.4 Ghz, 5 Ghz, or both
               <enum name="2_4ghz">
                    2.4 GHz band
                </enum>
                <enum name="5ghz">
                    5 GHz band
                </enum>
                <enum name="all">
                    Both 2.4 and 5 GHz bands
                </enum>
            </arg>
        </cmd>

        <cmd name="WifiAuthChannel">
            Controller inquire the list of authorized wifi channels.
        </cmd>
    </class>
    
    <class name="NetworkState" id="14">
        Network state from Product
        
        <cmd name="WifiScanListChanged">
            One scanning result found
            <arg name="ssid" type="string">
                SSID of the AP
            </arg>
            <arg name="rssi" type="i16">
                RSSI of the AP in dbm (negative value)
            </arg>
            <arg name="band" type="enum">
                The band : 2.4 GHz or 5 GHz
                <enum name="2_4ghz">
                    2.4 GHz band
                </enum>
                <enum name="5ghz">
                    5 GHz band
                </enum>
            </arg>
            <arg name="channel" type="u8">
                Channel of the AP
            </arg>
        </cmd>
        
        <cmd name="AllWifiScanChanged">
            State sent when all scanning result sent
        </cmd>

        <cmd name="WifiAuthChannelListChanged">
            Notify of an Authorized Channel.
            <arg name="band" type="enum">
                The band of this channel : 2.4 GHz or 5 GHz
                <enum name="2_4ghz">
                    2.4 GHz band
                </enum>
                <enum name="5ghz">
                    5 GHz band
                </enum>
            </arg>
            <arg name="channel" type="u8">
                The authorized channel.
            </arg>
            <arg name="in_or_out" type="u8">
                Bit 0 is 1 if channel is authorized outside (0 otherwise) ; Bit 1 is 1 if channel is authorized inside (0 otherwise)
            </arg>
        </cmd>

        <cmd name="AllWifiAuthChannelChanged">
            Notify the end of the list of Authorized wifi Channel.
        </cmd>
    </class>

    <class name="PilotingSettings" id="2">
        Piloting Settings commands
        <cmd name="MaxAltitude">
            Set Max Altitude
            <arg name="current" type="float">
                Current altitude max in m
            </arg>
        </cmd>
        <cmd name="MaxTilt">
            Set Max Tilt
            <arg name="current" type="float">
                Current tilt max in degree
            </arg>
        </cmd>
        <cmd name="AbsolutControl">
            Enable/Disable absolut control
            <arg name="on" type="u8">
                1 to enable, 0 to disable
            </arg>
        </cmd>
    </class>
    
    <class name="PilotingSettingsState" id="6">
        Piloting Settings state from product
        <cmd name="MaxAltitudeChanged">
            Max Altitude sent by product
            <arg name="current" type="float">
                Current altitude max
            </arg>
            <arg name="min" type="float">
                Range min of altitude
            </arg>
            <arg name="max" type="float">
                Range max of altitude
            </arg>
        </cmd>
        <cmd name="MaxTiltChanged">
            Max tilt sent by product
            <arg name="current" type="float">
                Current max tilt
            </arg>
            <arg name="min" type="float">
                Range min of tilt
            </arg>
            <arg name="max" type="float">
                Range max of tilt
            </arg>
        </cmd>
        <cmd name="AbsolutControlChanged">
            Absolut control boolean sent by product
            <arg name="on" type="u8">
                1 if enabled, 0 if disabled
            </arg>
        </cmd>
    </class>

    <class name="SpeedSettings" id="11">
        Speed Settings commands
        <cmd name="MaxVerticalSpeed">
            Set Max Vertical speed
            <arg name="current" type="float">
                Current max vertical speed in m/s
            </arg>
        </cmd>
        <cmd name="MaxRotationSpeed">
            Set Max Rotation speed
            <arg name="current" type="float">
                Current max rotation speed in degree/s
            </arg>
        </cmd>
        <cmd name="HullProtection">
            Presence of hull protection
            <arg name="present" type="u8">
                1 if present, 0 if not present
            </arg>
        </cmd>
        <cmd name="Outdoor">
            Outdoor property
            <arg name="outdoor" type="u8">
                1 if outdoor flight, 0 if indoor flight
            </arg>
        </cmd>
    </class>
    
    <class name="SpeedSettingsState" id="12">
        Speed Settings state from product
        <cmd name="MaxVerticalSpeedChanged">
            Max vertical speed sent by product
            <arg name="current" type="float">
                Current max vertical speed in m/s
            </arg>
            <arg name="min" type="float">
                Range min of vertical speed
            </arg>
            <arg name="max" type="float">
                Range max of vertical speed
            </arg>
        </cmd>
        <cmd name="MaxRotationSpeedChanged">
            Max rotation speed sent by product
            <arg name="current" type="float">
                Current max rotation speed in degree/s
            </arg>
            <arg name="min" type="float">
                Range min of rotation speed
            </arg>
            <arg name="max" type="float">
                Range max of rotation speed
            </arg>
        </cmd>
        <cmd name="HullProtectionChanged">
            Presence of hull protection sent by product
            <arg name="present" type="u8">
                1 if present, 0 if not present
            </arg>
        </cmd>
        <cmd name="OutdoorChanged">
            Outdoor property sent by product
            <arg name="outdoor" type="u8">
                1 if outdoor flight, 0 if indoor flight
            </arg>
        </cmd>
    </class>
    
    <class name="NetworkSettings" id="9">
        Network settings commands
        <cmd name="WifiSelection">
            Auto-select channel of choosen band
            <arg name="type" type="enum">
                The type of wifi selection (auto, manual)
                <enum name="auto">
                    Auto selection
                </enum>
                <enum name="manual">
                    Manual selection
                </enum>
            </arg>
            <arg name="band" type="enum">
                The allowed band(s) : 2.4 Ghz, 5 Ghz, or all
                <enum name="2_4ghz">
                    2.4 GHz band
                </enum>
                <enum name="5ghz">
                    5 GHz band
                </enum>
                <enum name="all">
                    Both 2.4 and 5 GHz bands
                </enum>
            </arg>
            <arg name="channel" type="u8">
                The channel (not used in auto mode)
            </arg>
        </cmd>
    </class>
    
    <class name="NetworkSettingsState" id="10">
        Network settings state from product
        <cmd name="WifiSelectionChanged">
            Wifi selection from product
            <arg name="type" type="enum">
                The type of wifi selection settings
                <enum name="auto_all">
                    Auto selection
                </enum>
                <enum name="auto_2_4ghz">
                    Auto selection 2.4ghz
                </enum>
                <enum name="auto_5ghz">
                    Auto selection 5 ghz
                </enum>
                <enum name="manual">
                    Manual selection
                </enum>
            </arg>
            <arg name="band" type="enum">
                The actual  wifi band state
                <enum name="2_4ghz">
                    2.4 GHz band
                </enum>
                <enum name="5ghz">
                    5 GHz band
                </enum>
                <enum name="all">
                    Both 2.4 and 5 GHz bands
                </enum>
            </arg>
            <arg name="channel" type="u8">
                The channel (depends of the band)
            </arg>
        </cmd>
    </class>
    
    <class name="Settings" id="15">
        Settings commands
    
    </class>
    <class name="SettingsState" id="16">
        Settings state from product

        <cmd name="ProductMotorVersionListChanged">
            DEPRECATED Product Motor version (the first argument is the unique identifier for the list)
            <arg name="motor_number" type="u8">
                Product Motor number
            </arg>
            <arg name="type" type="string">
                Product Motor type
            </arg>
            <arg name="software" type="string">
                Product Motors software version
            </arg>
            <arg name="hardware" type="string">
                Product Motors hardware version
            </arg>
        </cmd>
        <cmd name="ProductGPSVersionChanged">
            Product GPS versions
            <arg name="software" type="string">
                Product GPS software version
            </arg>
            <arg name="hardware" type="string">
                Product GPS hardware version
            </arg>
        </cmd>
        <cmd name="MotorErrorStateChanged">
            Motor status changed
            <arg name="motorIds" type="u8">
                Bit field for concerned motor. If bit 0 = 1, motor 1 is affected by this error. Same with bit 1, 2 and 3.
            </arg>
            <arg name="motorError" type="enum">
                Enumeration of the motor error
                <enum name="noError">
                    No error detected
                </enum>
                <enum name="errorEEPRom">
                    EEPROM access failure
                </enum>
                <enum name="errorMotorStalled">
                    Motor stalled 
                </enum>
                <enum name="errorPropellerSecurity">
                    Propeller cutout security triggered
                </enum>
                <enum name="errorCommLost">
                    Communication with motor failed by timeout
                </enum>
                <enum name="errorRCEmergencyStop">
                    RC emergency stop
                </enum>
                <enum name="errorRealTime">
                    Motor controler scheduler real-time out of bounds
                </enum>
                <enum name="errorMotorSetting">
                    One or several incorrect values in motor settings
                </enum>
                <enum name="errorBatteryVoltage">
                    Battery voltage out of bounds
                </enum>
                <enum name="errorLipoCells">
                    Incorrect number of LIPO cells
                </enum>
                <enum name="errorMOSFET">
                    Defectuous MOSFET or broken motor phases
                </enum>
                <enum name="errorTemperature">
                    Too hot or too cold Cypress temperature
                </enum>
                <enum name="errorBootloader">
                    Not use for BLDC but useful for HAL
                </enum>
                <enum name="errorAssert">
                    Error Made by BLDC_ASSERT()
                </enum>
            </arg>
        </cmd>
        <cmd name="MotorSoftwareVersionChanged">
            Motor software version status
            <arg name="version" type="string">
                name of the version : dot separated fields (major version - minor version - firmware type - nb motors handled). Firmware types : Release, Debug, Alpha, Test-bench
            </arg>
        </cmd>
        <cmd name="MotorFlightsStatusChanged">
            Motor flights status
            <arg name="nbFlights" type="u16">
                total number of flights
            </arg>
            <arg name="lastFlightDuration" type="u16">
                Duration of the last flight (in seconds)
            </arg>
            <arg name="totalFlightDuration" type="u32">
                Duration of all flights (in seconds)
            </arg>
        </cmd>
        <cmd name="MotorErrorLastErrorChanged">
            Motor status about last error
            <arg name="motorError" type="enum">
                Enumeration of the motor error
                <enum name="noError">
                    No error detected
                </enum>
                <enum name="errorEEPRom">
                    EEPROM access failure
                </enum>
                <enum name="errorMotorStalled">
                    Motor stalled
                </enum>
                <enum name="errorPropellerSecurity">
                    Propeller cutout security triggered
                </enum>
                <enum name="errorCommLost">
                    Communication with motor failed by timeout
                </enum>
                <enum name="errorRCEmergencyStop">
                    RC emergency stop
                </enum>
                <enum name="errorRealTime">
                    Motor controler scheduler real-time out of bounds
                </enum>
                <enum name="errorMotorSetting">
                    One or several incorrect values in motor settings
                </enum>
                <enum name="errorBatteryVoltage">
                    Battery voltage out of bounds
                </enum>
                <enum name="errorLipoCells">
                    Incorrect number of LIPO cells
                </enum>
                <enum name="errorMOSFET">
                    Defectuous MOSFET or broken motor phases
                </enum>
                <enum name="errorTemperature">
                    Too hot or too cold Cypress temperature
                </enum>
                <enum name="errorBootloader">
                    Not use for BLDC but useful for HAL
                </enum>
                <enum name="errorAssert">
                    Error Made by BLDC_ASSERT()
                </enum>
            </arg>
        </cmd>
    </class>
    
    <class name="DirectorMode" id="17">
        Director mode commands
        
    </class>

    <class name="DirectorModeState" id="18">
        Director mode state from product
    
    </class>
    
    <class name="PictureSettings" id="19">
        Photo settings chosen by the user
        <cmd name="PictureFormatSelection">
            The format of the photo
            <arg name="type" type="enum">
                The type of photo format
                <enum name="raw">
                    Take raw image
                </enum>
                <enum name="jpeg">
                    Take a 4:3 jpeg photo
                </enum>
                <enum name="snapshot">
                    Take a 16:9 snapshot from camera
                </enum>
            </arg>
        </cmd>
        <cmd name="AutoWhiteBalanceSelection">
            AutoWhiteBalance mode
            <arg name="type" type="enum">
                The type auto white balance
                <enum name="auto">
                    Auto guess of best white balance params
                </enum>
                <enum name="tungsten">
                    Tungsten white balance
                </enum>
                <enum name="daylight">
                    Daylight white balance
                </enum>
                <enum name="cloudy">
                    Cloudy white balance
                </enum>
                <enum name="flash">
                    White balance for a flash
                </enum>
            </arg>
        </cmd>
        <cmd name="ExpositionSelection">
            The exposition of the image
            <arg name="value" type="float">
                Exposition value (bounds given by ExpositionChanged arg min and max, by default [-3:3])
            </arg>
        </cmd>
        <cmd name="SaturationSelection">
            The saturation of the image
            <arg name="value" type="float">
                Saturation value (bounds given by SaturationChanged arg min and max, by default [-100:100])
            </arg>
        </cmd>
        <cmd name="TimelapseSelection">
            Picture taken periodically
            <arg name="enabled" type="u8">
                1 if timelapse is enabled, 0 otherwise
            </arg>
            <arg name="interval" type="float">
                interval in seconds for taking pictures
            </arg>
        </cmd>
        <cmd name="VideoAutorecordSelection">
            Video autorecord
            <arg name="enabled" type="u8">
                1 if video autorecord is enabled, 0 otherwise
            </arg>
            <arg name="mass_storage_id" type="u8">
                Mass storage id to take video
            </arg>
        </cmd>
    </class>
    
    <class name="PictureSettingsState" id="20">
        Photo settings state from product
        <cmd name="PictureFormatChanged">
        The format of the photo
            <arg name="type" type="enum">
                The type of photo format
                <enum name="raw">
                    Take raw image
                </enum>
                <enum name="jpeg">
                    Take a 4:3 jpeg photo
                </enum>
                <enum name="snapshot">
                    Take a 16:9 snapshot from camera
                </enum>
            </arg>
        </cmd>
        <cmd name="AutoWhiteBalanceChanged">
            AutoWhiteBalance mode
            <arg name="type" type="enum">
                The type auto white balance
                <enum name="auto">
                    Auto guess of best white balance params
                </enum>
                <enum name="tungsten">
                    Tungsten white balance
                </enum>
                <enum name="daylight">
                    Daylight white balance
                </enum>
                <enum name="cloudy">
                    Cloudy white balance
                </enum>
                <enum name="flash">
                    White balance for a flash
                </enum>
            </arg>
        </cmd>
        <cmd name="ExpositionChanged">
            The exposition of the image
            <arg name="value" type="float">
                Exposition value
            </arg>
            <arg name="min" type="float">
                Min exposition value
            </arg>
            <arg name="max" type="float">
                Max exposition value
            </arg>
        </cmd>
        <cmd name="SaturationChanged">
            The saturation of the image
            <arg name="value" type="float">
                Saturation value
            </arg>
            <arg name="min" type="float">
                Min saturation value
            </arg>
            <arg name="max" type="float">
                Max saturation value
            </arg>
        </cmd>
        <cmd name="TimelapseChanged">
            Picture taken periodically
            <arg name="enabled" type="u8">
                1 if timelapse is enabled, 0 otherwise
            </arg>
            <arg name="interval" type="float">
                interval in seconds for taking pictures
            </arg>
            <arg name="minInterval" type="float">
                Minimal interval for taking pictures
            </arg>
            <arg name="maxInterval" type="float">
                Maximal interval for taking pictures
            </arg>
        </cmd>
        <cmd name="VideoAutorecordChanged">
            Video autorecord
            <arg name="enabled" type="u8">
                1 if video autorecord is enabled, 0 otherwise
            </arg>
            <arg name="mass_storage_id" type="u8">
                Mass storage id for the taken video
            </arg>
        </cmd>
    </class>

    <class name="MediaStreaming" id="21">
        Control media streaming behavior.
        <cmd name="VideoEnable">
            Enable/disable video streaming.
            <arg name="enable" type="u8">
                1 to enable, 0 to disable.
            </arg>
        </cmd>
    </class>

    <class name="MediaStreamingState" id="22">
        Media streaming status.
        <cmd name="VideoEnableChanged">
            Return video streaming status.
            <arg name="enabled" type="enum">
                Current video streaming status.
                <enum name="enabled">
                    Video streaming is enabled.
                </enum>
                <enum name="disabled">
                    Video streaming is disabled.
                </enum>
                <enum name="error">
                    Video streaming failed to start.
                </enum>
            </arg>
        </cmd>
    </class>
    
    <class name="GPSSettings" id="23">
        GPS settings
        <cmd name="SetHome">
            Set home location
            <arg name="latitude" type="double">
                Home latitude in decimal degrees
            </arg>
            <arg name="longitude" type="double">
                Home longitude in decimal degrees
            </arg>
            <arg name="altitude" type="double">
                Home altitude in meters
            </arg>
        </cmd>
        <cmd name="ResetHome">
        	Reset home location and let the drone make its own home
        </cmd>
    </class>
    
    <class name="GPSSettingsState" id="24">
        GPS settings state
        <cmd name="HomeChanged">
            Return home status
            <arg name="latitude" type="double">
                Home latitude in decimal degrees
            </arg>
            <arg name="longitude" type="double">
                Home longitude in decimal degrees
            </arg>
            <arg name="altitude" type="double">
                Home altitude in meters
            </arg>
        </cmd>
        <cmd name="ResetHomeChanged">
            Reset home status
            <arg name="latitude" type="double">
                Home latitude in decimal degrees
            </arg>
            <arg name="longitude" type="double">
                Home longitude in decimal degrees
            </arg>
            <arg name="altitude" type="double">
                Home altitude in meters
            </arg>
        </cmd>
        <cmd name="GPSFixStateChanged">
            GPS fix state
            <arg name="fixed" type="u8">
                1 if gps on drone is fixed, 0 otherwise
            </arg>
        </cmd>
        <cmd name="GPSUpdateStateChanged">
            GPS update state
            <arg name="state" type="enum">
                The state of the gps update
                <enum name="updated">
                    Drone GPS update succeed
                </enum>
                <enum name="inProgress">
                    Drone GPS update In progress
                </enum>
                <enum name="failed">
                    Drone GPS update failed
                </enum>
            </arg>
        </cmd>
    </class>
    
    
    <class name="CameraState" id="25">
        Camera state
        
        <cmd name="Orientation">
            Camera orientation
            
            <arg name="tilt" type="i8">
                Tilt camera consign for the drone [-100;100]
            </arg>
            
            <arg name="pan" type="i8">
                Pan camera consign for the drone [-100;100]
            </arg>
        </cmd>
    </class>
</project>
